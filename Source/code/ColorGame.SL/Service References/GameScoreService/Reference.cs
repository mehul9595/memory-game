//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace ColorGame.SL.GameScoreService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserScore", Namespace="http://schemas.datacontract.org/2004/07/ColorGame.DataLayer.Model")]
    public partial class UserScore : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmailField;
        
        private string NameField;
        
        private int RankField;
        
        private int ScoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameScoreService.IScoreService")]
    public interface IScoreService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScoreService/Save", ReplyAction="http://tempuri.org/IScoreService/SaveResponse")]
        System.IAsyncResult BeginSave(ColorGame.SL.GameScoreService.UserScore userScore, System.AsyncCallback callback, object asyncState);
        
        void EndSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScoreService/GetTopRankersWithCurrentUser", ReplyAction="http://tempuri.org/IScoreService/GetTopRankersWithCurrentUserResponse")]
        System.IAsyncResult BeginGetTopRankersWithCurrentUser(ColorGame.SL.GameScoreService.UserScore userScore, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore> EndGetTopRankersWithCurrentUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScoreServiceChannel : ColorGame.SL.GameScoreService.IScoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTopRankersWithCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTopRankersWithCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScoreServiceClient : System.ServiceModel.ClientBase<ColorGame.SL.GameScoreService.IScoreService>, ColorGame.SL.GameScoreService.IScoreService {
        
        private BeginOperationDelegate onBeginSaveDelegate;
        
        private EndOperationDelegate onEndSaveDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTopRankersWithCurrentUserDelegate;
        
        private EndOperationDelegate onEndGetTopRankersWithCurrentUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetTopRankersWithCurrentUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ScoreServiceClient() {
        }
        
        public ScoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveCompleted;
        
        public event System.EventHandler<GetTopRankersWithCurrentUserCompletedEventArgs> GetTopRankersWithCurrentUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ColorGame.SL.GameScoreService.IScoreService.BeginSave(ColorGame.SL.GameScoreService.UserScore userScore, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSave(userScore, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ColorGame.SL.GameScoreService.IScoreService.EndSave(System.IAsyncResult result) {
            base.Channel.EndSave(result);
        }
        
        private System.IAsyncResult OnBeginSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ColorGame.SL.GameScoreService.UserScore userScore = ((ColorGame.SL.GameScoreService.UserScore)(inValues[0]));
            return ((ColorGame.SL.GameScoreService.IScoreService)(this)).BeginSave(userScore, callback, asyncState);
        }
        
        private object[] OnEndSave(System.IAsyncResult result) {
            ((ColorGame.SL.GameScoreService.IScoreService)(this)).EndSave(result);
            return null;
        }
        
        private void OnSaveCompleted(object state) {
            if ((this.SaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAsync(ColorGame.SL.GameScoreService.UserScore userScore) {
            this.SaveAsync(userScore, null);
        }
        
        public void SaveAsync(ColorGame.SL.GameScoreService.UserScore userScore, object userState) {
            if ((this.onBeginSaveDelegate == null)) {
                this.onBeginSaveDelegate = new BeginOperationDelegate(this.OnBeginSave);
            }
            if ((this.onEndSaveDelegate == null)) {
                this.onEndSaveDelegate = new EndOperationDelegate(this.OnEndSave);
            }
            if ((this.onSaveCompletedDelegate == null)) {
                this.onSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDelegate, new object[] {
                        userScore}, this.onEndSaveDelegate, this.onSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ColorGame.SL.GameScoreService.IScoreService.BeginGetTopRankersWithCurrentUser(ColorGame.SL.GameScoreService.UserScore userScore, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTopRankersWithCurrentUser(userScore, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore> ColorGame.SL.GameScoreService.IScoreService.EndGetTopRankersWithCurrentUser(System.IAsyncResult result) {
            return base.Channel.EndGetTopRankersWithCurrentUser(result);
        }
        
        private System.IAsyncResult OnBeginGetTopRankersWithCurrentUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ColorGame.SL.GameScoreService.UserScore userScore = ((ColorGame.SL.GameScoreService.UserScore)(inValues[0]));
            return ((ColorGame.SL.GameScoreService.IScoreService)(this)).BeginGetTopRankersWithCurrentUser(userScore, callback, asyncState);
        }
        
        private object[] OnEndGetTopRankersWithCurrentUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore> retVal = ((ColorGame.SL.GameScoreService.IScoreService)(this)).EndGetTopRankersWithCurrentUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTopRankersWithCurrentUserCompleted(object state) {
            if ((this.GetTopRankersWithCurrentUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTopRankersWithCurrentUserCompleted(this, new GetTopRankersWithCurrentUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTopRankersWithCurrentUserAsync(ColorGame.SL.GameScoreService.UserScore userScore) {
            this.GetTopRankersWithCurrentUserAsync(userScore, null);
        }
        
        public void GetTopRankersWithCurrentUserAsync(ColorGame.SL.GameScoreService.UserScore userScore, object userState) {
            if ((this.onBeginGetTopRankersWithCurrentUserDelegate == null)) {
                this.onBeginGetTopRankersWithCurrentUserDelegate = new BeginOperationDelegate(this.OnBeginGetTopRankersWithCurrentUser);
            }
            if ((this.onEndGetTopRankersWithCurrentUserDelegate == null)) {
                this.onEndGetTopRankersWithCurrentUserDelegate = new EndOperationDelegate(this.OnEndGetTopRankersWithCurrentUser);
            }
            if ((this.onGetTopRankersWithCurrentUserCompletedDelegate == null)) {
                this.onGetTopRankersWithCurrentUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTopRankersWithCurrentUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetTopRankersWithCurrentUserDelegate, new object[] {
                        userScore}, this.onEndGetTopRankersWithCurrentUserDelegate, this.onGetTopRankersWithCurrentUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ColorGame.SL.GameScoreService.IScoreService CreateChannel() {
            return new ScoreServiceClientChannel(this);
        }
        
        private class ScoreServiceClientChannel : ChannelBase<ColorGame.SL.GameScoreService.IScoreService>, ColorGame.SL.GameScoreService.IScoreService {
            
            public ScoreServiceClientChannel(System.ServiceModel.ClientBase<ColorGame.SL.GameScoreService.IScoreService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSave(ColorGame.SL.GameScoreService.UserScore userScore, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userScore;
                System.IAsyncResult _result = base.BeginInvoke("Save", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Save", _args, result);
            }
            
            public System.IAsyncResult BeginGetTopRankersWithCurrentUser(ColorGame.SL.GameScoreService.UserScore userScore, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userScore;
                System.IAsyncResult _result = base.BeginInvoke("GetTopRankersWithCurrentUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore> EndGetTopRankersWithCurrentUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore> _result = ((System.Collections.ObjectModel.ObservableCollection<ColorGame.SL.GameScoreService.UserScore>)(base.EndInvoke("GetTopRankersWithCurrentUser", _args, result)));
                return _result;
            }
        }
    }
}
